// <auto-generated />
using IEXTrading.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace IEXTrading.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IEXTrading.Models.Equity", b =>
                {
                    b.Property<int>("EquityId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("RecId");

                    b.Property<float>("change");

                    b.Property<float>("changeOverTime");

                    b.Property<float>("changePercent");

                    b.Property<float>("close");

                    b.Property<string>("date");

                    b.Property<float>("high");

                    b.Property<string>("label");

                    b.Property<float>("low");

                    b.Property<float>("open");

                    b.Property<string>("symbol");

                    b.Property<int>("unadjustedVolume");

                    b.Property<int>("volume");

                    b.Property<float>("vwap");

                    b.HasKey("EquityId");

                    b.HasIndex("RecId");

                    b.ToTable("Equities");
                });

            modelBuilder.Entity("IEXTrading.Models.Rec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("activity");

                    b.Property<string>("address");

                    b.Property<string>("age_requirements");

                    b.Property<string>("days_of_week");

                    b.Property<string>("phone_number");

                    b.Property<string>("recreation_center");

                    b.Property<string>("times");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("IEXTrading.Models.Signup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("activity");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int>("customer_id");

                    b.Property<string>("days_of_week")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("recreation_center")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("times")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("IEXTrading.Models.Equity", b =>
                {
                    b.HasOne("IEXTrading.Models.Rec")
                        .WithMany("Equities")
                        .HasForeignKey("RecId");
                });
#pragma warning restore 612, 618
        }
    }
}
